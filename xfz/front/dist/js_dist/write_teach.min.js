function Teach(){this.progressGroup=$("#progress-group")}Teach.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},Teach.prototype.listenQiniuUploadFileEvent=function(){var r=this;$("#thumbnail-btn").change(function(){var a=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,o=(new Date).getTime()+"."+a.name.split(".")[1],n={fname:o,params:{},mimeType:["image/png","image/jpeg","image/gif","video/x-ms-wmv","video/mp4"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(a,o,t,n,i).subscribe({next:r.handleFileUploadProgress,error:r.handleFileUploadError,complete:r.handleFileUploadComplete})}}})})},Teach.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";$("#progress-group").show();var o=$(".progress-bar");o.css({width:t}),o.text(t)},Teach.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},Teach.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var t="http://ps0j0p5j6.bkt.clouddn.com/"+e.key;$("input[name='avatar']").val(t)},Teach.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$(this).attr("data-news-id"),o=$("input[name='username']").val(),n=$("input[name='avatar']").val(),i=$("input[name='jobtitle']").val(),a=window.ue.getContent(),r="";r=t?"/course/edit_teach/":"/course/teach/",xfzajax.post({url:r,data:{username:o,avatar:n,jobtitle:i,profile:a,pk:t},success:function(e){200===e.code&&xfzalert.alertSuccess("恭喜！添加成功！",function(){window.location.reload()})}})})},Teach.prototype.run=function(){var e=this;e.initUEditor(),e.listenQiniuUploadFileEvent(),e.listenSubmitEvent()},$(function(){(new Teach).run(),Teach.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
