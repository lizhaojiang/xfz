function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),i=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),i.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var o=this,t=$(".signin-group"),i=t.find("input[name='telephone']"),s=t.find("input[name='password']"),r=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=i.val(),n=s.val(),e=r.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){if(200==t.code)o.hideEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var i=n[e][0];window.messageBox.show(i)}}},fail:function(t){console.log(t)}})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiQXV0aCIsInRoaXMiLCJtYXNrV3JhcHBlciIsIiQiLCJzY3JvbGxXcmFwcGVyIiwicHJvdG90eXBlIiwicnVuIiwic2VsZiIsImxpc3RlblNob3dIaWRlRXZlbnQiLCJsaXN0ZW5Td2l0Y2hFdmVudCIsImxpc3RlblNpZ25pbkV2ZW50Iiwic2hvd0V2ZW50Iiwic2hvdyIsImhpZGVFdmVudCIsImhpZGUiLCJzaWduaW5CdG4iLCJzaWdudXBCdG4iLCJjbG9zZUJ0biIsImNsaWNrIiwiY3NzIiwibGVmdCIsImN1cnJlbnRMZWZ0IiwicGFyc2VJbnQiLCJhbmltYXRlIiwic2lnbmluR3JvdXAiLCJ0ZWxlcGhvbmVJbnB1dCIsImZpbmQiLCJwYXNzd29yZElucHV0IiwicmVtZW1iZXJJbnB1dCIsInRlbGVwaG9uZSIsInZhbCIsInBhc3N3b3JkIiwicmVtZW1iZXIiLCJwcm9wIiwieGZ6YWpheCIsInBvc3QiLCJ1cmwiLCJkYXRhIiwic3VjY2VzcyIsInJlc3VsdCIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVsb2FkIiwibWVzc2FnZU9iamVjdCIsImNvbnN0cnVjdG9yIiwiU3RyaW5nIiwibWVzc2FnZUJveCIsImtleSIsIm1lc3NhZ2UiLCJmYWlsIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxPQUNNQyxLQUNOQyxZQUFjQyxFQUFFLGlCQURWRixLQUVORyxjQUFnQkQsRUFBRSxtQkFHM0JILEtBQUtLLFVBQVVDLElBQU0sV0FDakIsSUFBSUMsRUFBT04sS0FDWE0sRUFBS0Msc0JBQ0xELEVBQUtFLG9CQUNMRixFQUFLRyxxQkFHVFYsS0FBS0ssVUFBVU0sVUFBWSxXQUNaVixLQUNOQyxZQUFZVSxRQUdyQlosS0FBS0ssVUFBVVEsVUFBWSxXQUNaWixLQUNOQyxZQUFZWSxRQUdyQmQsS0FBS0ssVUFBVUcsb0JBQXNCLFdBQ2pDLElBQUlELEVBQU9OLEtBQ1BjLEVBQVlaLEVBQUUsZUFDZGEsRUFBWWIsRUFBRSxlQUNkYyxFQUFXZCxFQUFFLGNBRWpCWSxFQUFVRyxNQUFNLFdBQ1pYLEVBQUtJLFlBQ0xKLEVBQUtILGNBQWNlLElBQUksQ0FBQ0MsS0FBTyxNQUduQ0osRUFBVUUsTUFBTSxXQUNaWCxFQUFLSSxZQUNMSixFQUFLSCxjQUFjZSxJQUFJLENBQUNDLE1BQVEsUUFHcENILEVBQVNDLE1BQU0sV0FDWFgsRUFBS00sZUFJYmIsS0FBS0ssVUFBVUksa0JBQW9CLFdBQy9CLElBQUlGLEVBQU9OLEtBQ0lFLEVBQUUsV0FDUmUsTUFBTSxXQUNYLElBQUlHLEVBQWNkLEVBQUtILGNBQWNlLElBQUksU0FDekNFLEVBQWNDLFNBQVNELElBQ04sRUFDYmQsRUFBS0gsY0FBY21CLFFBQVEsQ0FBQ0gsS0FBTyxNQUVuQ2IsRUFBS0gsY0FBY21CLFFBQVEsQ0FBQ0gsS0FBTyxjQU0vQ3BCLEtBQUtLLFVBQVVLLGtCQUFvQixXQUMvQixJQUFJSCxFQUFPTixLQUVQdUIsRUFBY3JCLEVBQUUsaUJBQ2hCc0IsRUFBaUJELEVBQVlFLEtBQUssMkJBQ2xDQyxFQUFnQkgsRUFBWUUsS0FBSywwQkFDakNFLEVBQWdCSixFQUFZRSxLQUFLLDBCQUVyQkYsRUFBWUUsS0FBSyxlQUN2QlIsTUFBTSxXQUNaLElBQUlXLEVBQVlKLEVBQWVLLE1BQzNCQyxFQUFXSixFQUFjRyxNQUN6QkUsRUFBV0osRUFBY0ssS0FBSyxXQUVsQ0MsUUFBUUMsS0FBSyxDQUNUQyxJQUFPLGtCQUNQQyxLQUFRLENBQ0pSLFVBQWFBLEVBQ2JFLFNBQVlBLEVBQ1pDLFNBQVlBLEVBQVMsRUFBRSxHQUUzQk0sUUFBVyxTQUFVQyxHQUNqQixHQUFxQixLQUFsQkEsRUFBYSxLQUNaaEMsRUFBS00sWUFDTDJCLE9BQU9DLFNBQVNDLGFBQ2YsQ0FDRCxJQUFJQyxFQUFnQkosRUFBZ0IsUUFDcEMsR0FBMkIsaUJBQWpCSSxHQUE2QkEsRUFBY0MsYUFBZUMsT0FDaEVMLE9BQU9NLFdBQVdsQyxLQUFLK0IsUUFHdkIsSUFBSSxJQUFJSSxLQUFPSixFQUFjLENBQ3pCLElBQ0lLLEVBRFdMLEVBQWNJLEdBQ04sR0FDdkJQLE9BQU9NLFdBQVdsQyxLQUFLb0MsTUFLdkNDLEtBQVEsU0FBVUMsR0FDZEMsUUFBUUMsSUFBSUYsU0FNNUIvQyxFQUFFLFlBQ2EsSUFBSUgsTUFDVk0iLCJmaWxlIjoiYXV0aC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBBdXRoKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5tYXNrV3JhcHBlciA9ICQoJy5tYXNrLXdyYXBwZXInKTtcclxuICAgIHNlbGYuc2Nyb2xsV3JhcHBlciA9ICQoXCIuc2Nyb2xsLXdyYXBwZXJcIik7XHJcbn1cclxuXHJcbkF1dGgucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYubGlzdGVuU2hvd0hpZGVFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5Td2l0Y2hFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5TaWduaW5FdmVudCgpO1xyXG59O1xyXG5cclxuQXV0aC5wcm90b3R5cGUuc2hvd0V2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5tYXNrV3JhcHBlci5zaG93KCk7XHJcbn07XHJcblxyXG5BdXRoLnByb3RvdHlwZS5oaWRlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLm1hc2tXcmFwcGVyLmhpZGUoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLmxpc3RlblNob3dIaWRlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgc2lnbmluQnRuID0gJCgnLnNpZ25pbi1idG4nKTtcclxuICAgIHZhciBzaWdudXBCdG4gPSAkKCcuc2lnbnVwLWJ0bicpO1xyXG4gICAgdmFyIGNsb3NlQnRuID0gJCgnLmNsb3NlLWJ0bicpO1xyXG5cclxuICAgIHNpZ25pbkJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5zaG93RXZlbnQoKTtcclxuICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKHtcImxlZnRcIjowfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBzaWdudXBCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuc2hvd0V2ZW50KCk7XHJcbiAgICAgICAgc2VsZi5zY3JvbGxXcmFwcGVyLmNzcyh7XCJsZWZ0XCI6LTQwMH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY2xvc2VCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuaGlkZUV2ZW50KCk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLmxpc3RlblN3aXRjaEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIHN3aXRjaGVyID0gJChcIi5zd2l0Y2hcIik7XHJcbiAgICBzd2l0Y2hlci5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRMZWZ0ID0gc2VsZi5zY3JvbGxXcmFwcGVyLmNzcyhcImxlZnRcIik7XHJcbiAgICAgICAgY3VycmVudExlZnQgPSBwYXJzZUludChjdXJyZW50TGVmdCk7XHJcbiAgICAgICAgaWYoY3VycmVudExlZnQgPCAwKXtcclxuICAgICAgICAgICAgc2VsZi5zY3JvbGxXcmFwcGVyLmFuaW1hdGUoe1wibGVmdFwiOicwJ30pO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuYW5pbWF0ZSh7XCJsZWZ0XCI6XCItNDAwcHhcIn0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59O1xyXG5cclxuLy/nmbvlvZXms6jlhozmqKHmgIHmoYbnm5HlkKzkuovku7ZcclxuQXV0aC5wcm90b3R5cGUubGlzdGVuU2lnbmluRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAvL+iOt+WPlueZu+W9lemhtemdolxyXG4gICAgdmFyIHNpZ25pbkdyb3VwID0gJCgnLnNpZ25pbi1ncm91cCcpO1xyXG4gICAgdmFyIHRlbGVwaG9uZUlucHV0ID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3RlbGVwaG9uZSddXCIpO1xyXG4gICAgdmFyIHBhc3N3b3JkSW5wdXQgPSBzaWduaW5Hcm91cC5maW5kKFwiaW5wdXRbbmFtZT0ncGFzc3dvcmQnXVwiKTtcclxuICAgIHZhciByZW1lbWJlcklucHV0ID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3JlbWVtYmVyJ11cIik7XHJcblxyXG4gICAgdmFyIHN1Ym1pdEJ0biA9IHNpZ25pbkdyb3VwLmZpbmQoXCIuc3VibWl0LWJ0blwiKTtcclxuICAgIHN1Ym1pdEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHRlbGVwaG9uZSA9IHRlbGVwaG9uZUlucHV0LnZhbCgpO1xyXG4gICAgICAgIHZhciBwYXNzd29yZCA9IHBhc3N3b3JkSW5wdXQudmFsKCk7XHJcbiAgICAgICAgdmFyIHJlbWVtYmVyID0gcmVtZW1iZXJJbnB1dC5wcm9wKFwiY2hlY2tlZFwiKTtcclxuXHJcbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgJ3VybCc6ICcvYWNjb3VudC9sb2dpbi8nLFxyXG4gICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICd0ZWxlcGhvbmUnOiB0ZWxlcGhvbmUsXHJcbiAgICAgICAgICAgICAgICAncGFzc3dvcmQnOiBwYXNzd29yZCxcclxuICAgICAgICAgICAgICAgICdyZW1lbWJlcic6IHJlbWVtYmVyPzE6MFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddID09IDIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5oaWRlRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZU9iamVjdCA9IHJlc3VsdFsnbWVzc2FnZSddO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHR5cGVvZiBtZXNzYWdlT2JqZWN0ID09ICdzdHJpbmcnIHx8IG1lc3NhZ2VPYmplY3QuY29uc3RydWN0b3IgPT0gU3RyaW5nKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvdyhtZXNzYWdlT2JqZWN0KTtcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8ge1wicGFzc3dvcmRcIjpbJ+WvhueggeacgOWkp+mVv+W6puS4jeiDvei2hei/hzIw5Li677yBJywneHh4J10sXCJ0ZWxlcGhvbmVcIjpbJ3h4JywneCddfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGtleSBpbiBtZXNzYWdlT2JqZWN0KXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlcyA9IG1lc3NhZ2VPYmplY3Rba2V5XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gbWVzc2FnZXNbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubWVzc2FnZUJveC5zaG93KG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnZmFpbCc6IGZ1bmN0aW9uIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGF1dGggPSBuZXcgQXV0aCgpO1xyXG4gICAgYXV0aC5ydW4oKTtcclxufSk7Il19
